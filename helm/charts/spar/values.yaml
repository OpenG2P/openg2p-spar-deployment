global:
  hostname: spar.openg2p.sandbox.net

spar-self-service-api:
  enabled: true
  postgresql:
    enabled: false

  replicaCount: 1
  image:
    repository: openg2p/social-payments-account-registry
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "develop"

  envVars:
    SPAR_CORE_DB_HOSTNAME: spar-postgresql
    SPAR_CORE_AUTH_DEFAULT_ISSUERS: '["https://esignet.openg2p.sandbox.net/v1/esignet"]'
    SPAR_CORE_AUTH_DEFAULT_JWKS_URLS: '["https://esignet.openg2p.sandbox.mosip.net/v1/esignet/oauth/.well-known/jwks.json"]'

  envVarsFrom:
    SPAR_CORE_DB_PASSWORD:
      secretKeyRef:
        name: spar-postgresql

  ingress:
    enabled: false
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      # kubernetes.io/tls-acme: "true"
    hosts:
      - paths:
          - path: /spar/v1(/|$)(.*)
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  istio:
    enabled: true
    virtualservice:
      enabled: true
      host: ""
      gateway: "istio-system/all-hosts"
      prefix: "/spar/v1/"
      rewriteUri: "/"

  redis:
    enabled: true
    architecture: standalone
    auth:
      enabled: false

# Choose between either of the following mappers. Or disable both if using external mapper.
# Accordingly the URLs above in SPAR_CONNECTOR configs will need to be edited.
# Defaults to SPAR Mapper
spar-mapper-api:
  enabled: true
  fullnameOverride: mapper
  postgresql:
    enabled: false
  envVars:
    SPAR_MAPPER_DB_HOSTNAME: spar-postgresql # Change this value acc to name of the helm release.
  envVarsFrom:
    SPAR_MAPPER_DB_PASSWORD:
      secretKeyRef:
        name: postgres-postgresql
        key: password

  ingress:
    enabled: false
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    hosts:
      - paths:
          - path: /mapper/v1(/|$)(.*)
            pathType: ImplementationSpecific

  istio:
    enabled: true
    virtualservice:
      enabled: true
      host: ""
      gateway: "istio-system/all-hosts"
      prefix: "/mapper/v1/"
      rewriteUri: "/"

spar-self-service-ui:
  enabled: true
  replicaCount: 1
  image:
    repository: openg2p/spar-self-service-ui
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "develop"

  envVars:
    NEXT_PUBLIC_BASE_PATH: "/selfservice"
    NEXT_PUBLIC_BASE_API_PATH: "/spar/v1"

  ingress:
    enabled: false
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - paths:
          - path: /selfservice
            pathType: ImplementationSpecific

  istio:
    enabled: true
    virtualservice:
      enabled: true
      host: ""
      gateway: istio-system/all-hosts
      prefix: /selfservice

sunbird-rc-g2p-mapper-registry:
  enabled: false
  fullnameOverride: mapper
  registry:
    fullnameOverride: mapper-registry
    elasticsearch:
      fullnameOverride: mapper-registry-elasticsearch
    postgresql:
      enabled: false
    envVars:
      connectionInfo_uri: 'jdbc:postgresql://spar-postgresql:5432/spardb' # Change this value acc to name of the helm release.
      connectionInfo_username: sparuser
    envVarsFrom:
      connectionInfo_password:
        secretKeyRef:
          name: 'spar-postgresql' # Change this value acc to name of the helm release.
          key: password

postgresInit:
  enabled: true
  image: jbergknoff/postgresql-client
  imagePullPolicy: Always
  restartPolicy: Never
  envVars:
    GIT_REPO_URL: 'https://github.com/openg2p/social-payments-account-registry'
    GIT_BRANCH: 'develop'
    DEPLOY_DDL: 'false'
  envVarsFrom: {}
  backoffLimit: 1
  command:
  - sh
  - -c
  - >-
    sleep 10s;
    apk --no-cache add bash gettext git;
    export DB_HOST=$SPAR_CORE_DB_HOSTNAME;
    export DB_USER=$SPAR_CORE_DB_USERNAME;
    export DB_USER_PASSWORD=$SPAR_CORE_DB_PASSWORD;
    git_repo_name="$(basename "$GIT_REPO_URL" .git)";
    git clone --depth 1 --branch $GIT_BRANCH $GIT_REPO_URL &&
    cd $git_repo_name/db_scripts &&
    ./deploy.sh

postgresql:
  enabled: true
  auth:
    username: sparuser
    database: spardb
  primary:
    extendedConfiguration: |-
      wal_level = logical
      max_wal_senders = 20
      max_replication_slots = 10